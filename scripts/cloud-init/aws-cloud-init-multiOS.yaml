#cloud-config
# vim: syntax=yaml
#
# -------------------------------------------------------------------------------
# Copyright 2025 Karl Vietmeier / KCV Consulting
# SPDX-License-Identifier: Apache-2.0
#
# AWS-adapted cloud-init config for Ubuntu/Debian & RHEL/CentOS/Rocky EC2
# Bootstraps instance, installs dev tools, compiles FIO, iPerf, DOOL, SockPerf, Elbencho,
# sets up labuser, enables NTP via AWS default server, configures shell environment.
# -------------------------------------------------------------------------------

package_update: true
package_upgrade: true

packages:
  - libtool
  - tmux
  - git
  - tree
  - numactl
  - wget
  - traceroute
  - nmap
  - sysstat
  - bc
  - jq
  - pkg-config

write_files:
  # Compile/install tools
  - path: /tmp/compiletools.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      exec > >(tee -a /tmp/compiletools-out.log) 2>&1
      echo "compiletools.sh started at $(date)" 

      # Detect OS
      if [ -f /etc/debian_version ]; then
        apt-get update -y
        chmod -x /etc/update-motd.d/*
        DEBIAN_FRONTEND=noninteractive apt-get install -y \
          build-essential \
          debhelper \
          libboost-dev \
          libboost-program-options-dev \
          libboost-system-dev \
          libboost-thread-dev \
          libssl-dev \
          libncurses-dev \
          libnuma-dev \
          libaio-dev \
          librdmacm1 \
          bpfcc-tools \
          man-db \
          chrony \
          dnsutils \
          nfs-common \
          cmake \
          dkms \
          autoconf \
          libcurl4-openssl-dev \
          uuid-dev \
          zlib1g-dev
      elif [ -f /etc/redhat-release ]; then
        dnf groupinstall -y "Development Tools"
        dnf install -y \
          epel-release \
          numactl-devel \
          libaio-devel \
          boost-devel \
          boost-program-options \
          boost-system \
          boost-thread \
          ncurses-devel \
          openssl-devel \
          bcc-tools \
          man-db \
          chrony \
          bind-utils \
          nfs-utils \
          cmake \
          rdma-core \
          libcurl-devel \
          libuuid-devel \
          zlib \
          zlib-devel \
          libarchive
      fi

      cd /root
      mkdir -p .local/bin
      mkdir -p git && cd git

      LOG_FILE="/tmp/cloud-init-out.txt"

      log_and_continue() {
        echo "$1" >> "$LOG_FILE"
        if [ $? -ne 0 ]; then
          echo "Warning: $1 failed!" >> "$LOG_FILE"
        fi
      }

      # DOOL
      git clone https://github.com/scottchiefbaker/dool.git
      cd dool
      ./install.py
      cd ..

      # FIO
      git clone https://github.com/axboe/fio.git
      cd fio
      ./configure
      make
      make install
      cd ..

      # iPerf
      git clone https://github.com/esnet/iperf.git
      cd iperf
      ./configure
      make
      make install
      cd ..
      echo "/usr/local/lib" > /etc/ld.so.conf.d/iperf.conf && log_and_continue "Added /usr/local/lib to ld.so.conf.d"
      ldconfig && log_and_continue "Ran ldconfig"

      # SockPerf
      git clone https://github.com/mellanox/sockperf
      cd sockperf
      ./autogen.sh
      ./configure
      make
      make install
      cd ..

      # Elbencho with S3 support
      git clone https://github.com/breuner/elbencho.git
      cd elbencho
      make S3_SUPPORT=1 -j "$(nproc)"
      if [ -f /etc/redhat-release ]; then
        make rpm && dnf install -y ./packaging/RPMS/x86_64/elbencho*.rpm
      elif [ -f /etc/debian_version ]; then
        make install
      fi
      cd /root

      # Setup labuser folders
      mkdir -p /home/labuser/output
      chown -R labuser:labuser /home/labuser/output
      cd /home/labuser
      git clone https://github.com/kvietmeier/scripts.git
      chown -R labuser:labuser /home/labuser/scripts

      # Enable chrony
      if [ -f /etc/debian_version ]; then
        systemctl enable chrony
        systemctl restart chrony
      elif [ -f /etc/redhat-release ]; then
        systemctl enable chronyd
        systemctl restart chronyd
      fi

      echo "compiletools.sh completed at $(date)" >> /tmp/cloud-init-out.txt

  # Labuser shell environment
  - path: /home/labuser/.bashrc
    owner: labuser:labuser
    append: true
    defer: true
    content: |
      alias la="ls -Av"
      alias ls="ls -hF --color=auto"
      alias l="ls -CFv"
      alias ll='ls -lhvF --group-directories-first'
      alias lla='ls -alhvF --group-directories-first'
      alias egrep='egrep --color=auto'
      alias fgrep='fgrep --color=auto'
      alias grep='grep --color=auto'
      alias cdb='cd -'
      alias cdu='cd ..'
      alias df='df -kh'
      alias du='du -h'
      set -o vi
      bind 'set bell-style none'

  # Root shell environment
  - path: /root/.bashrc
    owner: root:root
    append: true
    content: |
      alias ls="ls -hFv --color=auto"
      alias l="ls -CFv"
      alias la="ls -Av"
      alias ll='ls -lhvF --group-directories-first'
      alias lla='ls -alhvF --group-directories-first'
      alias egrep='egrep --color=auto'
      alias fgrep='fgrep --color=auto'
      alias grep='grep --color=auto'
      alias cdb='cd -'
      alias cdu='cd ..'
      alias df='df -kh'
      alias du='du -h'
      set -o vi
      bind 'set bell-style none'

  # Timekeeping with AWS NTP
  - path: /etc/chrony/chrony.conf
    content: |
      server 169.254.169.123 prefer iburst
      driftfile /var/lib/chrony/drift
      makestep 1.0 3
      rtcsync
      logdir /var/log/chrony
      allow 0.0.0.0/0
      bindcmdaddress 127.0.0.1
      bindcmdaddress ::1

  # Flag file
  - path: /root/CONFIGURED_BY_CLOUD_INIT

runcmd:
  - bash /tmp/compiletools.sh
  - echo "cloud-init completed successfully at $(date)" > /tmp/cloud-init-completed.txt

# Users
users:
  - name: labuser
    gecos: Lab User
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    #ssh_authorized_keys:
    #  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQ... karlv@linuxtools
    #  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQD... karl.vietmeier@Tandaloor

final_message: "========= Post Install cloud-init Completed ========="
