#cloud-config
# vim: syntax=yaml
#
###=============================================================================###
# Bootstrap setup for a Linux server
# 
# cloud-init docs:
#   https://cloudinit.readthedocs.io/en/latest/index.html 
# 
# Examples:
#   https://cloudinit.readthedocs.io/en/latest/topics/examples.html
#
###=============================================================================###

# Upgrade the instance on first boot
# (ie run apt-get upgrade)
package_upgrade: true

# Install additional packages on first boot
packages:
  # DPDK Dependencies
  - librdmacm-dev
  - librdmacm1
  - libnuma-dev
  - libmnl-dev
  - libpcap-dev
  - autoconf 
  - lib32z1
  - meson
  - pkg-config
  - cmake
  - python3-pyelftools
  - python-pyelftools
  - python3-pip
  # Useful stuff you need
  - libtool
  - screen
  - build-essential
  - git
  - tree
  - dstat
  - slurm
  - psmisc
  - net-tools
  - nfs-common
  - sysstat
  - dnsutils
  - numactl
  - apt-file
  # Need these to support apt over http
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common

# Run commands once on first boot - clone and compile useful tools
runcmd:
  # Needed for DPDK
  - [pip3, install, ninja]
  - [pip3, install, meson]
  # Compile/install iperf3
  - [git, clone, https://github.com/esnet/iperf.git]
  - [cd, iperf]
  - ['./configure']
  - [make]
  - [make, install]
  - [/usr/sbin/ldconfig]
  - [cd, ~]
  # Compile/install sockperf
  - [git, clone, https://github.com/mellanox/sockperf]
  - [cd, sockperf]
  - ['./autogen.sh']
  - ['./configure']
  - [make]
  - [make, install]
  - [cd, ~]
  # Compile/install FIO
  - [git, clone, https://github.com/axboe/fio.git]
  - [cd, fio]
  - ['./configure']
  - [make]
  - [make, install]
  - [cd, ~]
  # System cleanup
  - [apt-get, clean, -yy]
  - [apt-get, autoremove, -yy]
  - [mandb, -c]
  - [apt-file, update]
  # Create some directories
  - [mkdir, /tmp/output]
  - [mkdir, /mnt/huge]


###--- Users
#---
#--- Allows you to add more than 1 key to authorized_keys and configure sudo.
users:
  # Keep the original default user
  - name: default
    ssh-authorized-keys:
    - <put keys here>
    - <put keys here>
  # Start adding additional users - With SSH keys added
  - name: labuser
    ssh-authorized-keys:
    - <put keys here>
    - <put keys here>
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash


###--- Misc system configuration
timezone: "America/Los_Angeles"

# Use Azure host for timesync
ntp:
  enabled: true
  ntp_client: chrony
  config:
    confpath: /etc/chrony/chrony.conf
    packages:
     - chrony
    service_name: chrony
    template: |
       ## template:jinja
       driftfile /var/lib/chrony/chrony.drift
       logdir /var/log/chrony
       maxupdateskey 100.0
       refclock PHC /dev/ptp_hyperv poll 3 dpoll -2
       makestep 1.0 -1


# Create empty files on the system
write_files:
- path: /root/CONFIGURED_BY_CLOUD_INIT


final_message: Post creation OS config done

###--- End File