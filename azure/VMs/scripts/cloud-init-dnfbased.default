#cloud-config
# vim: syntax=yaml
#
###=============================================================================###
# Bootstrap setup for a dnf/yum based Linux server
# 
# Make sure you have all of the tools you need!
# 
# cloud-init docs:
#   https://cloudinit.readthedocs.io/en/latest/index.html 
# 
# Examples:
#   https://cloudinit.readthedocs.io/en/latest/topics/examples.html
#
# 
#      --- Modified for Azure Linux VMs ---
#
###=============================================================================###

# Upgrade the instance on first boot
# (ie run upgrade - works for dnf or yum)
package_upgrade: true

# Set default user to "azureuser"  (modify as required)
system_info:
  default_user:
    name: azureuser

# Install additional packages on first boot
packages:
  - librdmacm
  - libnuma
  #- zlib-devel  # Already installed
  - libaio-devel
  - librbd1-devel
  - autoconf 
  - meson
  - pkg-config
  - cmake
  # Python3
  - python3-pyelftools
  - python3-pip
  # Useful stuff you need
  - build-essential
  - perf
  - less
  - tmux
  - libtool
  - git
  - tree
  - psmisc
  - net-tools
  - sysstat
  - vim
  - curl
  - bmon
  - wget
  - jq
  - numactl
  - iproute
  - blktrace
  - ca-certificates
  - curl
  - traceroute
  #- telegraf
  # Mariner specific
  - bcc-tools
  - kernel-headers
  - kernel-devel
  - python3-cpuinfo
  # Not found in Mariner repos
  #
  # For iperf3
  #- libsctp1
  #- nmon         # NM
  #- gnupg-agent  # NM
  #- hwinfo       # NM
  #- stress-ng    # NM
  #- screen       # (no match)
  #- slurm        # (no match)
  #- ccze         # NM
  #- dnsutils     # NM
  #- saidar       # NM
  #- cloud-utils  #NM
  #- software-properties-common # NM
  #- openjdk-17-jre-headless
  # DPDK Dependencies
  #- librdmacm-dev
  #- librdmacm1
  #- libnuma-dev
  #- libmnl-dev
  #- libpcap-dev
  #- lib32z1
  #- libpcapv

###
###--- Create and/or modify files on the system
###
write_files:
# Append settings to .bashrc
#--- Not working for some reason
#- path: /home/azureuser/.bashrc
#  content: |
#    
#    # Added by cloud-init
#    alias l="ls -CF"
#    alias ll="ls -l"
#    alias lla="ls -la"
#    alias la="ls -A"
#    alias ls="ls -F --color=auto"
#    alias egrep='egrep --color=auto'
#    alias fgrep='fgrep --color=auto'
#    alias grep='grep --color=auto'
#
#    set -o vi
#  owner: azureuser:azureuser
#  append: true
#  defer: true
#--- This works
- path: /etc/profile
  content: |
    
    # Added by cloud-init
    alias ls="ls -hF --color=auto"
    alias l="ls -CF"
    alias la="ls -A"
    alias ll='ls -lhvF --group-directories-first'
    alias lla='ls -alhvF --group-directories-first'
    alias lla="ls -lah"
    alias egrep='egrep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias grep='grep --color=auto'

    set -o vi
  owner: root:root
  append: true
# Testing different way to compile tools during install
- path: /tmp/install_tools.sh
  content: |
    #!/bin/bash

    cd /root
    mkdir git
    cd git
    git clone https://github.com/esnet/iperf.git
    git clone https://github.com/mellanox/sockperf
    git clone https://github.com/axboe/fio.git
    
    echo "script ran" >> /tmp/foobar.txt

    echo "" >> /root/.bashrc
    echo "set -o vi" >> /root/.bashrc

    cat << EOF >> /home/azureuser/.bashrc
    
    # Added by cloud-init
    alias l="ls -CF"
    alias ll="ls -l"
    alias lla="ls -la"
    alias la="ls -A"
    alias ls="ls -F --color=auto"
    alias egrep='egrep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias grep='grep --color=auto'

    set -o vi

    EOF

    chown azureuser:azureuser /home/azureuser/.bashrc
  permissions: '0755'
- path: /root/CONFIGURED_BY_CLOUD_INIT

# Run commands once on first boot - clone and compile useful tools
# DNF based systems don't like the [,,,] runcmd syntax
runcmd:
  ## Create some directories
  - mkdir /tmp/output
  - mkdir /mnt/huge
  - bash /tmp/install_tools.sh
  # Needed for DPDK
  #- [pip3, install, ninja]
  #- [pip3, install, meson]
  # Compile/install iperf3
  #- [git, clone, "https://github.com/esnet/iperf.git"]
  #- git clone "https://github.com/esnet/iperf.git"
  #- cd iperf
  #- ['./configure']
  #- [make]
  #- [make, install]
  #- [/usr/sbin/ldconfig]
  #- [cd, ~]
  ## Compile/install sockperf
  #- git clone "https://github.com/mellanox/sockperf"
  #- [cd, sockperf]
  #- ['./autogen.sh']
  #- ['./configure']
  #- [make]
  #- [make, install]
  #- [cd, ~]
  ## Compile/install FIO
  #- git clone "https://github.com/axboe/fio.git"
  #- [cd, fio]
  #- ['./configure']
  #- [make]
  #- [make, install]
  #- [cd, ~]
  ## System cleanup
  #- [apt-get, clean, -yy]
  #- [apt-get, autoremove, -yy]
  #- [mandb, -c]
  #- [apt-file, update]


###--- Users
#      Need to add your keys - will populate .ssh/authorized_keys
users:
  # Keep and update the original default user (azureuser or ubuntu for example)
  - name: default
    ssh_authorized_keys:
      - ssh-rsa <key>
      - ssh-rsa <key>
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: sudo
    shell: /bin/bash
    # Configure an added user - With additional SSH keys
  - name: labuser
    ssh_authorized_keys:
    - ssh-rsa <key>
    - ssh-rsa <key>
    shell: /bin/bash
    groups: sudo
    sudo: ALL=(ALL) NOPASSWD:ALL  


###--- Misc system configuration
timezone: "America/Los_Angeles"

# Use Azure host for timesync
ntp:
  enabled: true
  ntp_client: chrony
  config:
    confpath: /etc/chrony/chrony.conf
    packages:
     - chrony
    service_name: chrony
    template: |
       ## template:jinja
       driftfile /var/lib/chrony/chrony.drift
       logdir /var/log/chrony
       maxupdateskew 100.0
       local stratum 2
       refclock PHC /dev/ptp_hyperv poll 3 dpoll -2
       makestep 1.0 -1




final_message: Post creation OS config done

###--- End File